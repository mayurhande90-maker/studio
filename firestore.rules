/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict user-ownership model for user profiles and restricts access to image generation logs.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile data, accessible only to the user.
 * - /jobs/{jobId}: Stores image processing jobs, accessible to anyone for now.
 * - /logs/aiGeneration/{logId}: Stores image generation logs, not directly accessible via client.
 *
 * Key Security Decisions:
 * - User profiles are private and accessible only to the authenticated user with a matching user ID.
 * - Image generation logs are not meant to be directly accessed by clients.
 * - In this initial prototyping phase, writes to the jobs collection are open to facilitate processing by backend functions.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces user-ownership for user profiles.
     * @path /users/{userId}
     * @allow (get, create, update, delete, list) if the request is made by the user with matching ID.
     * @deny (get, create, update, delete, list) if the request is made by a different user or an unauthenticated user.
     * @principle Enforces document ownership for all operations on user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;

      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isExistingOwner(userId);
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Allows anyone to read and write to the jobs collection. This is temporary for prototyping, and WILL require a revisit.
     * @path /jobs/{jobId}
     * @allow (get, list) if true.
     * @allow (create, update, delete) if true.
     * @principle Allows for image processing jobs to be created by anyone.  This is temporary and MUST be secured later.
     */
    match /jobs/{jobId} {
      allow get, list: if true;
      allow create, update, delete: if true; // TODO: Securing this is the next step to avoid abuse.
    }

      /**
       * @description Restricts access to the aiGeneration logs collection.
       * @path /logs/aiGeneration/{logId}
       * @allow No client access is allowed.
       * @principle Prevents unauthorized access to sensitive logging information.
       */
      match /logs/aiGeneration/{logId} {
        allow get, list, create, update, delete: if false;
      }
  }
}